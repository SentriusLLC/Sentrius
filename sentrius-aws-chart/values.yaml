
# General settings
replicaCount: 1
namespace: default

# Sentrius configuration
sentrius:
  image:
    repository: 060808646119.dkr.ecr.us-east-1.amazonaws.com/sentrius
    tag: 1.0.65
    pullPolicy: IfNotPresent
  port: 8080
  ssh:
    port: 22
  env:
    - name: SPRING_DATASOURCE_USERNAME
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: username
    - name: SPRING_DATASOURCE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: password
    - name: KEYSTORE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: keystore-password
  resources: {}
  config:
    application: |
      keystore.file=sso.jceks
      keystore.password=${KEYSTORE_PASSWORD}
      keystore.alias=KEYBOX-ENCRYPTION_KEY
      keystore.algorithm=AES
      spring.main.web-application-type=servlet
      spring.thymeleaf.enabled=true
      spring.freemarker.enabled=false
      #flyway configuration
      spring.flyway.enabled=true
      spring.datasource.url=jdbc:postgresql://sentrius-postgres:5432/sentrius
      spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
      spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
      spring.datasource.driver-class-name=org.postgresql.Driver
      # Connection pool settings
      spring.datasource.hikari.maximum-pool-size=10
      spring.datasource.hikari.minimum-idle=5
      spring.datasource.hikari.idle-timeout=30000
      spring.datasource.hikari.max-lifetime=1800000
      # Hibernate settings (optional, for JPA)
      spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
       # Disable automatic schema generation in production
      spring.jpa.hibernate.ddl-auto=none
      # Ensure this path matches your project structure
      #spring.flyway.locations=classpath:db/migration/
      spring.flyway.baseline-on-migrate=true
      # Thymeleaf settings
      spring.thymeleaf.prefix=classpath:/templates/
      spring.thymeleaf.suffix=.html
      #spring.datasource.url=jdbc:h2:mem:testdb
      logging.level.org.springframework.web=INFO
      logging.level.org.springframework.security=INFO
      logging.level.io.dataguardians=DEBUG
      logging.level.org.thymeleaf=INFO
      spring.thymeleaf.servlet.produce-partial-output-while-processing=false
      spring.servlet.multipart.enabled=true
      spring.servlet.multipart.max-file-size=10MB
      spring.servlet.multipart.max-request-size=10MB
      server.error.whitelabel.enabled=false
      dynamic.properties.path=/config/dynamic.properties
      keycloak.realm=sentrius
      # keycloak configuration
      spring.security.oauth2.client.registration.keycloak.client-id=sentrius-api
      spring.security.oauth2.client.registration.keycloak.client-secret=nGkEukexSWTvDzYjSkDmeUlM0FJ5Jhh0
      spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
      spring.security.oauth2.client.registration.keycloak.redirect-uri=http://sentrius-keycloak:30080/login/oauth2/code/keycloak
      spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
      spring.security.oauth2.resourceserver.jwt.issuer-uri=http://sentrius-keycloak:30081/realms/sentrius
      spring.security.oauth2.client.provider.keycloak.issuer-uri=http://sentrius-keycloak:30081/realms/sentrius
    dynamic: |
      auditorClass=io.dataguardians.sso.automation.auditing.AccessTokenAuditor
      twopartyapproval.option.LOCKING_SYSTEMS=true
      requireProfileForLogin=true
      maxJitDurationMs=1440000
      sshEnabled=true
      systemLogoName=Sentrius
      AccessTokenAuditor.rule.4=io.dataguardians.sso.automation.auditing.rules.OpenAISessionRule;Malicious AI Monitoring
      AccessTokenAuditor.rule.5=io.dataguardians.sso.automation.auditing.rules.TwoPartyAIMonitor;AI Second Party Monitor
      allowProxies=true
      AccessTokenAuditor.rule.2=io.dataguardians.sso.automation.auditing.rules.DeletePrevention;Delete Prevention
      AccessTokenAuditor.rule.3=io.dataguardians.sso.automation.auditing.rules.TwoPartySessionRule;Require Second Party Monitoring
      AccessTokenAuditor.rule.0=io.dataguardians.sso.automation.auditing.rules.CommandEvaluator;Restricted Commands
      terminalsInNewTab=false
      auditFlushIntervalMs=5000
      AccessTokenAuditor.rule.1=io.dataguardians.sso.automation.auditing.rules.AllowedCommandsRule;Approved Commands
      knownHostsPath=/home/marc/.ssh/known_hosts
      systemLogoPathLarge=/images/sentrius_large.jpg
      maxJitUses=1
      systemLogoPathSmall=/images/sentrius_small.png
      enableInternalAudit=true
      twopartyapproval.require.explanation.LOCKING_SYSTEMS=false
      canApproveOwnJITs=false
      yamlConfiguration=/app/exampleInstallWithTypes.yml

# PostgreSQL configuration
postgres:
  image:
    repository: postgres
    tag: 15
  port: 5432
  env:
    - POSTGRES_DB: sentrius
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: username
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: password
  enabled: false  # Disable the local PostgreSQL container
  external:
    host: sentrius-customer-1.c18msi2yms14.us-east-1.rds.amazonaws.com
    port: 5432
    user: admin
    password: password
    database: sentrius

ssh:
  image:
    repository: 060808646119.dkr.ecr.us-east-1.amazonaws.com/sentrius-ssh
    tag: 1.0.27
    pullPolicy: IfNotPresent
  port: 22
  env:


# Service settings
service:
  type: LoadBalancer
  ports:
    http: 8080
    https: 8443

keycloak:
  image:
    repository: 060808646119.dkr.ecr.us-east-1.amazonaws.com/sentrius-keycloak
    tag: 1.0.41
    pullPolicy: IfNotPresent
  host: keycloak.default.svc.cluster.local
  adminUser: admin
  adminPassword: admin
  env:
    - DB_VENDOR: POSTGRES
    - DB_ADDR: sentrius-customer-1.c18msi2yms14.us-east-1.rds.amazonaws.com
    - DB_PORT: 5432
    - DB_DATABASE: keycloak
    - name: DB_USER
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: username
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: sentrius-rds-secret
          key: password
  persistence:
    enabled: true
    storageClass: gp2
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  replicas: 1
  hostname: sentrius-keycloak


ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-path: /auth/realms/master
  hosts:
    - host: ""
      paths:
        - path: /*
          pathType: ImplementationSpecific



debug:
  enabled: true
